# ========================
# APPLICATION CONFIGURATION
# ========================
spring.application.name=api-gateway
server.port=8090
server.servlet.context-path=/

# ====================
# EUREKA CONFIGURATION
# ====================
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.client.healthcheck.enabled=true

# ====================
# GATEWAY ROUTING CONFIG
# ====================
spring.cloud.gateway.routes[0].id=matches-service
spring.cloud.gateway.routes[0].uri=lb://microservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/matches/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/matches/(?<segment>.*), /$\{segment}

# Enable discovery locator
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ====================
# SECURITY DISABLE (FULL)
# ====================
# Disable ALL security auto-configurations
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration,org.springframework.boot.actuate.autoconfigure.security.reactive.ReactiveManagementWebSecurityAutoConfiguration

# Disable default user creation
spring.security.user.name=disabled
spring.security.user.password=disabled
spring.security.user.roles=_

# Disable security filters
spring.security.filter.disabled=true

# ====================
# ACTUATOR CONFIGURATION
# ====================
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true

# ====================
# HTTP CLIENT CONFIG
# ====================
spring.cloud.gateway.httpclient.connect-timeout=1000
spring.cloud.gateway.httpclient.response-timeout=5000